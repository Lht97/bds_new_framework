name: Plot performance profiles for bds and nomad, small

on:
  # Trigger the workflow on push or pull request
  # push:
  # Trigger the workflow manually
  # schedule:
  #  - cron: '0 22 */7 * *'
  workflow_dispatch:

env:
    GFORTRAN_VERSION: 12

jobs:
  test:
    name: Profile BDS and nomad, small
    runs-on: ${{matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        matlab: [R2023a]
        dim: [small]
        with_optim_toolbox: [no]
        solver: [CBDS]
        competitor: [nomad]
        feature: [plain, badly_scaled]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install GCC
        run: sudo apt-get update && sudo apt-get install gcc-10 

      - name: Set GCC version
        run: |
          echo "CC=gcc-10" >> $GITHUB_ENV
          echo "CXX=g++-10" >> $GITHUB_ENV
  
      - name: check gcc version
        run: /usr/bin/gcc-10 --version

      - name: Clone MatCUTEst
        uses: actions/checkout@v4
        with:
          repository: matcutest/matcutest_compiled
          path: matcutest

      - name: Clone nomad
        uses: actions/checkout@v4
        with:
          repository: bbopt/nomad
          path: nomad

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/link_gfortran ${{ env.GFORTRAN_VERSION }}

      - name: Install epstopdf and ghostscript
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/install_epstopdf && bash .github/scripts/install_ghostscript

      - name: Install Texlive
        run: sudo apt-get update && sudo apt-get install texlive

      - name: Check whether LaTeX is installed
        run: pdflatex --version

      - name: Cache MATLAB
        id: cache-matlab
        uses: actions/cache@v3.3.2
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}-${{ matrix.with_optim_toolbox }}

      - name: Set up MATLAB 
        uses: matlab-actions/setup-matlab@v2-beta
        with:
          release: ${{ matrix.matlab }}

      - name: Install cmake
        run: sudo apt-get install cmake

      - name: Configuration
        run:  cd ./nomad && cmake -DTEST_OPENMP=OFF -DBUILD_INTERFACE_MATLAB=ON -S . -B build/release 

      - name: Build
        run:  cd ./nomad && cmake --build build/release

      - name: Install
        run: cd ./nomad && cmake --install build/release

      - name: Run test
        uses: matlab-actions/run-command@v1.2.2
        with:
          command: |
            root_dir = pwd()

            % Install MatCUTEst
            cd(fullfile(root_dir, 'matcutest'));
            install(); cd(root_dir);

            nomad_dir = fullfile(root_dir, 'nomad');
            nomad_lib_dir = fullfile(nomad_dir, 'build', 'release', 'lib');
            addpath(nomad_lib_dir);

            % Conduct your tests
            path_tests = fullfile(root_dir, 'tests');
            cd(path_tests)
            test_nomad();
            parameters.problem_dim = "${{ matrix.dim }}";
            parameters.parallel = false;
            parameters.feature = "${{ matrix.feature }}";
            parameters.fmin_type = "randomized";
            parameters.MaxFunctionEvaluations_factor = 1e3;
            parameters.solvers_name = ["${{ matrix.solver }}", "${{ matrix.competitor }}"];
            
            parameters.log_profile = true; parameters.plot_fhist = true; plot_profile(parameters);

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: test_bds_nomad_small
          path: ./tests/testdata
