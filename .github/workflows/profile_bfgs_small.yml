name: Plot performance profiles for bds and bfgs, small

on:
  # Trigger the workflow on push or pull request
  # push:
  # Trigger the workflow manually
  schedule:
    - cron: '0 12 */7 * *'
  workflow_dispatch:

env:
    GFORTRAN_VERSION: 12

jobs:
  test:
    name: Profile BDS and bfgs, small
    runs-on: ${{matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        matlab: [latest]
        dim: [small]
        with_optim_toolbox: [yes]
        solver: [CBDS]
        competitor: [bfgs]
        feature: [plain, badly_scaled, low, medium, high]

    steps:

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Set up Node.js    
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Clone MatCUTEst
        uses: actions/checkout@v4
        with:
          repository: matcutest/matcutest_compiled
          path: matcutest

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/link_gfortran ${{ env.GFORTRAN_VERSION }}

      - name: Install epstopdf and ghostscript
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/install_epstopdf && bash .github/scripts/install_ghostscript

      - name: Install Texlive
        run: sudo apt-get update && sudo apt-get install texlive

      - name: Check whether LaTeX is installed
        run: pdflatex --version

      - name: Cache MATLAB
        id: cache-matlab
        uses: actions/cache@v4.0.2
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}-${{ matrix.with_optim_toolbox }}

      - name: Set up MATLAB with optimization toolbox
        if: ${{ matrix.with_optim_toolbox == 'yes' }}
        uses: matlab-actions/setup-matlab@v2-beta
        with:
          release: ${{ matrix.matlab }}
          products: Optimization_Toolbox

      - name: Set up MATLAB with diary
        uses: matlab-actions/run-command@v1.2.3
        with:
            command: |
              fullfile(matlabroot,'toolbox', 'local')
              userpath
              if isempty(userpath)
                  userpath(fullfile(matlabroot,'toolbox', 'local'))
                  rehash toolboxcache
              end
  
              userpath
  
              matlabroot
  
              exit

      - name: Symbolic link the startup.m file
        run: ln -s $../tests/private/MATLABROOT%toolbox%local%startup.m $'/opt/hostedtoolcache/MATLAB/2023.2.999/x64/toolbox/local/startup.m'

      - name: See whether the diary is set up
        uses: matlab-actions/run-command@v1.2.3
        with:
          command: |

            userpath
            homedir = getenv('HOME');
            cd(homedir);
            ls

            exit

      - name: Run test
        uses: matlab-actions/run-command@v1.2.3
        with:
          command: |
            root_dir = pwd()

            % Install MatCUTEst
            cd(fullfile(root_dir, 'matcutest'));
            install(); cd(root_dir);

            % Conduct your tests
            path_tests = fullfile(root_dir, 'tests');
            cd(path_tests)
            parameters.problem_dim = "${{ matrix.dim }}";
            parameters.parallel = true;
            parameters.feature = "${{ matrix.feature }}";
            parameters.fmin_type = "randomized";
            parameters.solvers_name = ["${{ matrix.solver }}", "${{ matrix.competitor }}"];
            
            parameters.log_profile = true; parameters.plot_fhist = true; plot_profile(parameters);

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: test_bds_bfgs_small
          path: ./tests/testdata
