name: Test replacement delay for bds, big

on:
  # Trigger the workflow on push or pull request
  # push:
  # Trigger the workflow manually
  # schedule:
  #  - cron: '0 22 */3 * *'
  workflow_dispatch:

env:
    GFORTRAN_VERSION: 12

jobs:
  test:
    name: Set replacement_delay for rbds, big
    runs-on: ${{matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        matlab: [latest]
        dim: [big]
        with_optim_toolbox: [yes]
        solver: [CBDS]
        competitor: [rbds]
        replacement_delay: [5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
        feature: [plain, badly_scaled]

    steps:

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Clone MatCUTEst
        uses: actions/checkout@v4
        with:
          repository: matcutest/matcutest_compiled
          path: matcutest

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/link_gfortran ${{ env.GFORTRAN_VERSION }}

      - name: Install epstopdf and ghostscript
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/install_epstopdf && bash .github/scripts/install_ghostscript

      - name: Install Texlive
        run: sudo apt-get update && sudo apt-get install texlive

      - name: Check whether LaTeX is installed
        run: pdflatex --version

      - name: Cache MATLAB
        id: cache-matlab
        uses: actions/cache@v4.0.1
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}-${{ matrix.with_optim_toolbox }}

      - name: Set up MATLAB with optimization toolbox
        if: ${{ matrix.with_optim_toolbox == 'yes' }}
        uses: matlab-actions/setup-matlab@v2.1.0
        with:
          release: ${{ matrix.matlab }}
          products: Optimization_Toolbox

      - name: Run test
        uses: matlab-actions/run-command@v1.2.2
        with:
          command: |
            root_dir = pwd()

            % Install MatCUTEst
            cd(fullfile(root_dir, 'matcutest'));
            install(); cd(root_dir);

            % Conduct your tests
            path_tests = fullfile(root_dir, 'tests');
            cd(path_tests)
            parameters.problem_dim = "${{ matrix.dim }}";
            parameters.num_random = 10;
            parameters.parallel = true;
            parameters.feature = "${{ matrix.feature }}";
            parameters.fmin_type = "randomized";
            parameters.solvers_name = ["${{ matrix.solver }}", "${{ matrix.competitor }}"];
            parameters.solvers_options{2}.replacement_delay = ${{matrix.replacement_delay}};
            
            plot_profile(parameters);

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: test_replacement_delay_big
          path: ./tests/testdata
